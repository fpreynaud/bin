#!/bin/bash
## Puts files in a trash folder instead of deleting them ##

# Constants #
trash=~/.local/share/Trash/files

# Switches provided by command-line arguments #
delete=false # Actually delete the file(s)
recursive=true # Remove folders or not
verbose=false # Set verbose output on/off
prompt=false # Prompt before every removal
alert=false # Warn before removing more than 3 files

# Other variables #
optionName=
argIsValue=false
FILES=""
skip=false

# Functions #

# @usage display <text>
# @param <text>: The text to display
# @desc Print <text> if verbose mode is on
display()
{
	if $verbose; then
		echo "$*"
	fi
}

# @usage Prompt <file>
# @param <file>: The file to remove
# @desc Prompt the user before removing <file>
prompt()
{
	read -p "Remove $1 ? " answer

	case $answer in
		no) display "Skipping $1"; skip=true;;
		yes) skip=false;;
		*)
			while [ $answer != "yes" ] && [ $answer != "no" ]
			do
				read -p "Please answer 'yes' or 'no'" answer
			done

			case $answer in
				no) display "Skipping $1"; skip=true;;
				yes) skip=false;;
			esac
	esac
}

# Create the trash folder if it does not exist #
if [ ! -d $trash ]; then
	mkdir -p $trash
	chmod 700 $trash
fi

# Process the command-line argumentsÂ #
for arg in "$@"
do
	case $arg in
		# Short options
		-*)optionName="$(echo $arg|sed s/"^-"//)";
			for letter in $(seq 1 ${#optionName})
			do
				option=$(echo $optionName|cut -c $letter)

				case $option in
					i) prompt=true;;
					I) alert=true;;
					n) recursive=false;;
					d) delete=true;;
					v) verbose=true;;
					*) echo "Invalid option $option" 1>&2;;
			esac
			done
		;;
		# Files to remove
		*) FILES="${FILES}$arg "
		;;
	esac
done

nb="$(echo $FILES|wc -w)"

# Display warning if option -I is enabled, and ask for confirmation to proceed #
if $alert && [ $nb -gt 3 ]; then
	read -p "You are about to remove $nb files. Continue ? " answer
	case $answer in
		no) display "Aborted"; exit;;
		yes) display "Proceeding...";;
		*) while [ "$answer" != "yes" ] && [ "$answer" != "no" ]; do read -p "Please answer 'yes' or 'no': "; done;
			case $answer in
				no) display "Aborted"; exit;;
				yes) display "Proceeding...";;
			esac
	esac
fi

# Process the files sequentially #
for file in $FILES
do
	# Generate destination name in the trash #
	timestamp=$(date +%d%m%Y_%T)
	trashName="$(basename $file)_$timestamp"
	counter=2

	while [ -e $trash/$trashName ]
	do
		trashName="$trashName_$counter"
		counter=$((counter + 1))
	done


	# Prompt before removal if -i option is active
	if $prompt; then
		prompt $file
		if $skip; then continue; fi
	fi

	# Raise an error if the current file is a directory and recursion is off (-n active)
	if [ -d $file ] && ! $recursive; then
		echo "Error: $file is directory and recursion is off" 1>&2
		continue
	fi

	# Actually delete the file if -d is active
	if $delete; then
		if ! $recursive; then rm $file; else rm -r $file; fi
		display "Removed $file"
		continue
	fi

	# Perform the move
	mv $file "$trash/$trashName" && display "Removed $file"
done
